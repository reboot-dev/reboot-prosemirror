syntax = "proto3";

package docs.v1;

import "google/protobuf/struct.proto";
import "rbt/v1alpha1/options.proto";

////////////////////////////////////////////////////////////////////////

service DocInterface {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (rbt.v1alpha1.method).writer = {};
  }

  rpc Apply(ApplyRequest) returns (ApplyResponse) {
    option (rbt.v1alpha1.method).writer = {};
  }

  rpc Changes(ChangesRequest) returns (ChangesResponse) {
    option (rbt.v1alpha1.method).reader = {};
  }
}

////////////////////////////////////////////////////////////////////////

message Doc {
  option (rbt.v1alpha1.state) = {};
  repeated Change changes = 1;
}

////////////////////////////////////////////////////////////////////////

// A `Change` is a prosemirror `step` from a specific `client`.
message Change {
  // See prosemirror `Step` type.
  google.protobuf.Struct step = 1;

  // The client that authored this change.
  string client = 2;
}

////////////////////////////////////////////////////////////////////////

message CreateRequest {}

message CreateResponse {}

////////////////////////////////////////////////////////////////////////

message ApplyRequest {
  uint32 version = 1;
  repeated Change changes = 2;
}

message ApplyResponse {}

////////////////////////////////////////////////////////////////////////

message ChangesRequest {
  uint32 sinceVersion = 1;
}

message ChangesResponse {
  uint32 version = 1;
  repeated Change changes = 2;
}

////////////////////////////////////////////////////////////////////////
